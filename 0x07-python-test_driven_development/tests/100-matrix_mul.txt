The "100-matrix_mul" module
==============================

Using "matrix_mul" function
------------------------------

Let's first import
    >>> sys = __import__("sys")
    >>> sys.path.insert(1, "../tests/100-matrix_mul")
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Expected results with given entries:

   >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6], [7, 8]])
   [[19, 22], [43, 50], [43, 50]]

   >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]])
   [[19, 22, 5], [43, 50, 11], [43, 50, 11]]

   >>> matrix_mul([[5, 6], [7, 8]], "Holberton")
   Traceback (most recent call last):
   TypeError: m_b must be a list

   >>> matrix_mul([[5, 6], [7, 8]], [[5, 6, 1], [7, 8]])
   Traceback (most recent call last):
   TypeError: each row of m_b must be of the same size

   >>> matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2], [3, 4]])
   Traceback (most recent call last):
   ValueError: m_a and m_b can't be multiplied

   >>> matrix_mul("Holberton", [[1, 2], [3, 4]])
   Traceback (most recent call last):
   TypeError: m_a must be a list

   >>> matrix_mul([1, 3, 4], [[1, 2], [3, 4]])
   Traceback (most recent call last):
   TypeError: m_a must be a list of lists

   >>> matrix_mul([[1, 3, 4], [1, 4, 5]], [1, 5, 6] )
   Traceback (most recent call last):
   TypeError: m_b must be a list of lists

   >>> matrix_mul([[]], [[1, 4, 5]])
   Traceback (most recent call last):
   ValueError: m_a can't be empty

   >>> matrix_mul([[1, 3, 4, 6]], [[]])
   Traceback (most recent call last):
   ValueError: m_b can't be empty

   >>> matrix_mul([["", "2"], [3.4, 4], [3, 4]], [[5, 6], [7, 8]])
   Traceback (most recent call last):
   TypeError: m_a should contain only integers or floats

   >>> matrix_mul([[1, 2], [3, 4], [3, 4]], [["5", 6.4], [7, 8]])
   Traceback (most recent call last):
   TypeError: m_b should contain only integers or floats

   >>> matrix_mul([[2], [3, 4], [3, 4]], [["5", 6.4], [7, 8]])
   Traceback (most recent call last):
   TypeError: m_b should contain only integers or floats

   >>> matrix_mul([[2, 4], [3, 4], [3, 4]], [[5, 6], [8]])
   Traceback (most recent call last):
   TypeError: each row of m_b must be of the same size

   >>> matrix_mul([[2, 4], [3, 4], [3, 4]], [[5, 6], [8, 9], [1, 4]])
   Traceback (most recent call last):
   ValueError: m_a and m_b can't be multiplied

   >>> matrix_mul()
   Traceback (most recent call last):
   TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

   >>> matrix_mul([[1, 2]])
   Traceback (most recent call last):
   TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
